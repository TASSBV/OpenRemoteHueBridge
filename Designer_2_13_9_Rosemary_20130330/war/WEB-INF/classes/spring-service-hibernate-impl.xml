<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ OpenRemote, the Home of the Digital Home.
  ~ Copyright 2008-2012, OpenRemote Inc.
  ~ See the contributors.txt file in the distribution for a
  ~ full listing of individual contributors.
  ~
  ~ This is free software; you can redistribute it and/or modify it
  ~ under the terms of the GNU General Public License as
  ~ published by the Free Software Foundation; either version 3.0 of
  ~ the License, or (at your option) any later version.
  ~
  ~ This software is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~
  ~ You should have received a copy of the GNU General Public
  ~ License along with this software; if not, write to the Free
  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
       default-autowire="byName">

<!-- 
    <aop:config proxy-target-class="true">
        <aop:pointcut id="serviceMethods"
                      expression="execution(* org.openremote.modeler.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods"/>
    </aop:config>

	<tx:annotation-driven mode="aspectj"/>


    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
        
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="del*" propagation="REQUIRED"/>
            <tx:method name="edit*" propagation="REQUIRED"/>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="export*" propagation="REQUIRED"/>
            <tx:method name="load*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <tx:method name="invite*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

 -->
 
 
  <!-- enable the configuration of transactional behavior based on annotations -->
  <tx:annotation-driven transaction-manager="transactionManager"/>
 
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
        <property name="nestedTransactionAllowed" value="true"/>

    </bean>
    
	 <bean id="velocity" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				input.encoding=UTF8
			</value>
		</property>
	</bean>
	
   <bean id="abstractService" abstract="true" class="org.openremote.modeler.service.BaseAbstractService" />
	
	<bean id="userService" class="org.openremote.modeler.service.impl.UserServiceImpl" parent="abstractService"></bean>
	<bean id="deviceService" class="org.openremote.modeler.service.impl.DeviceServiceImpl" parent="abstractService"></bean>
	<bean id="deviceCommandService" class="org.openremote.modeler.service.impl.DeviceCommandServiceImpl" parent="abstractService"></bean>
	<bean id="deviceMacroService" class="org.openremote.modeler.service.impl.DeviceMacroServiceImpl" parent="abstractService"></bean>
	<bean id="deviceMacroItemService" class="org.openremote.modeler.service.impl.DeviceMacroItemServiceImpl" parent="abstractService"></bean>
	<bean id="resourceService" class="org.openremote.modeler.service.impl.ResourceServiceImpl" parent="abstractService"></bean>
	<bean id="switchService" class="org.openremote.modeler.service.impl.SwitchServiceImpl" parent="abstractService"/>
	<bean id="sliderService" class="org.openremote.modeler.service.impl.SliderServiceImpl" parent="abstractService"/>
	<bean id="sensorService" class="org.openremote.modeler.service.impl.SensorServiceImpl" parent="abstractService"></bean>
	<bean id="controllerConfigService" class="org.openremote.modeler.service.impl.ControllerConfigServiceImpl" parent="abstractService"/>
	<bean id="templateService" class="org.openremote.modeler.service.impl.TemplateServiceImpl" parent="abstractService"/>
	
</beans>

