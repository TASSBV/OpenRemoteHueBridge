/*
 * OpenRemote, the Home of the Digital Home.
 * Copyright 2008-2011, OpenRemote Inc.
 *
 * See the contributors.txt file in the distribution for a
 * full listing of individual contributors.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.openremote.controller.protocol

import org.openremote.controller.model.event.*;

global org.openremote.controller.statuscache.CommandFacade execute;


/* -------------------------------------------------------------------------
 *
 *  Execute command when temperature reaches the minimum specified value
 *
 * ------------------------------------------------------------------------- */

rule "Execute on minimum temperature"

when

  $evt : Range( source == "temperature", value == minValue )

then

  execute.command("counter", "hit the min");

end



/* -------------------------------------------------------------------------
 *
 *  Execute command when temperature reaches the maximum specified value
 *
 * ------------------------------------------------------------------------- */

rule "Execute on maximum temperature"

when

  $evt : Range ( source == "temperature", value == maxValue )

then

  execute.command("counter", "hit the max");

end



/* -------------------------------------------------------------------------
 *
 *   Set value when between min anx max limits (exclusive)
 *
 * ------------------------------------------------------------------------- */

rule "Set range value as command param"

when

  $evt : Range (source == "temperature", value != minValue, value != maxValue)

then

  execute.command("counter", $evt.getValue());

end

