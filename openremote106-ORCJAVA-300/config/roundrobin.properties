#######################################################################
#
# ROUNDROBIN DESCRIPTION:
#
#  Controller provides the RESTful service named "/rest/servers" for client(iPhone, wallpanel, ect). 
#  So, client can get all available controllers'(groupmembers') url in same group.
#  And there are three roles about RoundRobin mechanism implementation in Controller, 
#  they are RoundRobinClient,RoundRobinUDPServer,RoundRobinTCPServer in every controllers.
#  
#  First of all, RoundRobinUDPServer and RoundRobinTCPServer will startup while every controllers starting up.
#  While client requests the service (/rest/servers) of certain controller, 
#  controller will create a RoudRobinClient instance ,
#  send UDPMulticast package to detect groupmembers and wait for several milliseconds. 
#  This pakage contains msgID indicated the unique request and groupname. 
#  At this time, the UDPServer in the other controllers will observe the UPD package, 
#  and then receive it, judge whether the package sender controller is from the same group by groupname in the package.  
#  If the sender controller is, then create TCP connection and response to the sender controller with controller url and msgID in the UDP package. 
#  If the sender isn't, do nothing.
#  At this time, the TCPServer of sender controller will receive TCP packages contained msgID and groupmember urls, 
#  then store the groupmember urls into a Map<msgID, List>, 
#  So, the RoundRobinClient can get groupmembers's url from RoundRobinTCPServer by msgID after wake up. 
#  At last, RoundRobinClient composes all urls into xml-formatted data and response to client(iPhone, iPod).
#
######################################################################

#######################################################################
#
# ROUNDROBIN CONFIGURATION REQUIRED MODIFIED OPTIONS:
#
#  All the options below are about ROUNDROBIN must be changed in some deployment
#  scenarios.
#
######################################################################

# Specify whether auto-detect group member function is turned on (true/false).
# If it's false, the controller will get the groupmembers from the key named "controller.groupmember.candidate.urls" of current configuration file.
# If it's true, controller will auto-detect its groupmembers with multicast.
controller.groupmember.autodetect.on=true

# Groupname of controller
# This identifies which group this controller is in.
controller.groupname=floor20

# Group members candidate urls
# if auto-detect is turned off, or auto-detect fails, will use these urls.
controller.groupmember.candidate.urls=http://192.168.1.5:8080/controller/,http://192.168.1.100:8080/controller/,http://192.168.1.105:8080/controller/

#######################################################################
#
# ROUNDROBIN CONFIGURATION OPTIONAL MODIFIED OPTIONS:
#
#  All the options below are about ROUNDROBIN may be changed in some deployment
#  scenarios, but under normal circumstances you should leave them
#  unchanged.
#
######################################################################

# Multicast address for roundrobin
# NOTE: This option is useful only on the situation of "controller.roundrobin.on" is true.
controller.roundrobin.multicast.address=224.0.1.200

# Multicast port for roundrobin
# NOTE: This option is useful only on the situation of "controller.roundrobin.on" is true.
controller.roundrobin.multicast.port=10000

# Round robin tcpserver socket port of Controller
controller.roundrobin.tcpserver.port=20000

